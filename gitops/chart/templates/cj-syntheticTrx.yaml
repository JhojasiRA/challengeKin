apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "testing-automation.fullname" . }}-synthetictrx
  labels:
    {{- include "testing-automation.labels" . | nindent 4 }}
    app: testing-automation-synthetictrx
spec:
  schedule: "{{ .Values.cronScheduleSynthetictrx }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            aadpodidbinding: {{ include "testing-automation.fullname" . }}
        spec:
          restartPolicy: Never
          nodeSelector:
            kubernetes.io/os: linux
          initContainers:
          - name: {{ include "testing-automation.fullname" . }}-synthetictrx
            image: "{{ .Values.image_cs.repository }}:{{ .Values.image_cs.tag }}"
            env:
            - name: STEPS_TIMEOUT
              value: "90000"
            - name: TEST_TO_RUN
              value: headless:syntheticTrx             
            - name: SPLUNK_INDEX
              value: "{{ .Values.splunkIndex }}"
            - name: PORTAL_URL
              value: "{{ .Values.PORTAL_URL }}"
            - name: API_CS
              value: "{{ .Values.API_CS }}"
            - name: URL_NOTIF
              value: "{{ .Values.URL_NOTIF }}"
            - name: IS_URL
              value: "{{ .Values.IS_URL }}"
            - name: SPLUNK_HOST
              value: "{{ .Values.splunkHost }}"

{{- if .Values.keyVault.enabled }}              
            - name: SPLUNK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: splunk-collector-token
                  key: token
{{- end }}  
{{- if .Values.keyVault.enabled }}              
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: common-services-user1-password
                  key: passworduser1
{{- end }}
{{- if .Values.keyVault.enabled }}              
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: common-services-client-secret
                  key: client-secret
{{- end }} 
{{- if .Values.keyVault.enabled }}              
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: common-services-rockwell-username
                  key: rockwell-username
{{- end }}
{{- if .Values.keyVault.enabled }}              
            - name: RA_USERNAME
              valueFrom:
                secretKeyRef:
                  name: common-services-ra-username
                  key: ra-username
{{- end }}
{{- if .Values.keyVault.enabled }}              
            - name: RA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: common-services-ra-password
                  key: ra-password
{{- end }}                
{{- if .Values.keyVault.enabled }}
            volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
{{- end }}
          imagePullSecrets:
          - name: {{ .Values.imagePullSecrets }}
{{- if .Values.keyVault.enabled }}
          volumes:
          - name: secrets-store-inline
            csi:
              driver: secrets-store.csi.k8s.io
              readOnly: true
              volumeAttributes:
                secretProviderClass: {{ include "testing-automation.fullname" . }}
{{- end }}
#DeleteToolCode
          containers:
              - name: {{ .Chart.Name }}-delete-synthetic-test-users
                securityContext:
                  {{- toYaml .Values.securityContext | nindent 20 }}
                image: "{{ .Values.image_cs.repository }}:{{ .Values.image_cs.tag }}"
                imagePullPolicy: {{ .Values.image_cs.pullPolicy }}
                {{- if .Values.keyVault.enabled }}
                volumeMounts:
                  - name: secrets-store-inline
                    mountPath: "/mnt/secrets-store"
                    readOnly: true
                  - name: tmp
                    mountPath: /tmp
                {{- end }}
                env:
                - name: TMPDIR
                  value: /tmp
                - name: ENTRYPOINT_DLL
                  value: Cleanup.dll -cmd deleteuser
                - name: EQUINOX_COSMOS_CONNECTION
                  valueFrom:
                    secretKeyRef:
                      name: lc-cosmos-connection
                      key: connectionString
                - name: EQUINOX_COSMOS_DATABASE
                  value: {{ .Values.cosmos.database }}
                - name: EQUINOX_COSMOS_CONTAINER
                  value: {{ .Values.cosmos.container }}
                - name: AZURE_STORAGE_ACCOUNT_CONNECTION
                  valueFrom:
                    secretKeyRef:
                      name: view-storage
                      key: connectionString
                - name: USER_IDS
                  value: {{ .Values.cleanup_tool.syntheticTestUserIds }}
          imagePullSecrets:
              - name: {{ .Values.imagePullSecrets }}
          restartPolicy: "OnFailure"
          terminationGracePeriodSeconds: 101
{{- if .Values.keyVault.enabled }}
          volumes:
            - name: secrets-store-inline
              csi:
                  driver: secrets-store.csi.k8s.io
                  readOnly: true
                  volumeAttributes:
                    secretProviderClass: {{ include "testing-automation.fullname" . }}
            - name: tmp
              emptyDir: {}
{{- end }}

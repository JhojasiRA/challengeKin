name: PerformanceTest

on:
  workflow_dispatch:
    branches:
      - '**'
    inputs:
      tags:
        description: "Specify Tag (optional)"
        required: false
env:    
  DOCKER_FILE: "Dockerfile"
  CONTAINER_PORT: 80
  KUBERNETES_NAMESPACE: testing-automation
  SECURITY_NAMESPACE: security
  KUBERNETES_APP_NAME: testing-automation-cs
  CONTAINER_REGISTRY_NAME: ghcr.io
  BUILD_CONFIG: "Debug"
  HELM_CHART_RELATIVE_LOCATION: gitops/chart
  HELM_CHART_NAME: testing-automation-cs


jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # Fetches entire history, so we can analyze commits since last tag.
          fetch-depth: 0

      - name: Checkout RA Action Repo
        uses: actions/checkout@v3
        with:
          repository: Rockwell-Automation-Inc/actions
          ref: v9.1
          token: ${{ secrets.READ_GITHUB_ACTIONS_PAT }}
          path: .github/actions

      - name: Helm Lint
        run: |
          find ./${{ env.HELM_CHART_RELATIVE_LOCATION }} -name '*-values.yaml' -exec helm lint ${{ env.HELM_CHART_RELATIVE_LOCATION }} -f {} \;
      - name: Determine next tag
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release'
        id: next_tag
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
          PRERELEASE_SUFFIX: prerelease
          DRY_RUN: true

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Determine next tag
        if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        id: next_tag_dev
        uses: anothrNick/github-tag-action@1.33.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: master
          PRERELEASE_SUFFIX: development
          DRY_RUN: true

      - name: Apply version to Helm chart and values
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/develop'
        run: |
          find ./${{ env.HELM_CHART_RELATIVE_LOCATION }} -name 'Chart.yaml' -exec sed -i 's|version: 0.0.1|version: '$BUILD_VERSION'|g' {} +
          find ./${{ env.HELM_CHART_RELATIVE_LOCATION }} -name 'Chart.yaml' -exec sed -i 's|appVersion: 0.0.1|appVersion: '$BUILD_VERSION'|g' {} +
          find ./${{ env.HELM_CHART_RELATIVE_LOCATION }} -name '*values.yaml' -exec sed -i 's|profile-0.0.1|profile-'$BUILD_VERSION'|g' {} +
          find ./${{ env.HELM_CHART_RELATIVE_LOCATION }} -name '*values.yaml' -exec sed -i 's|${{ env.KUBERNETES_APP_NAME }}-0.0.1|${{ env.KUBERNETES_APP_NAME }}-'$BUILD_VERSION'|g' {} +
          echo "${{ github.event.inputs.tags }}"
          echo "${{ steps.next_tag_dev.outputs.new_tag }}"
          echo "${{ steps.previoustag.outputs.tag }}"
          git describe --tags
        env:
          BUILD_VERSION: ${{ github.event.inputs.tags || steps.previoustag.outputs.tag }}

      - name: Archive helm-charts artifacts 
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v3
        with:
          name: helm-charts
          path: ${{ env.HELM_CHART_RELATIVE_LOCATION }}


  sandbox-performance-test:
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/feature/performance-test'
    needs: build
    timeout-minutes: 20
    runs-on:
      - self-hosted
      - ${{ matrix.location }}
      - ${{ matrix.environment }}
      - deployment    # Define some nonprod specific environment variables.
    # Define some Sandbox specific environment variables.
    strategy:
      fail-fast: false  # Don't fail all if one fails.
      matrix:
        location: [eastus2]
        include:
          - location: eastus2
            environment: sandbox
            cluster_name: aks-eastus2-sandbox0
            identity_resource_id: /subscriptions/a7ffc9c0-e376-4bb4-8f03-b13f138296d0/resourceGroups/rg-sandbox-usermanaged-aks-eastus2/providers/Microsoft.ManagedIdentity/userAssignedIdentities/aks-keyvault-managed-identity
            identity_client_id: 16461407-dd82-438a-9c9c-df523d82c745
    env:
      DEPLOYMENT_ENVIRONMENT: sandbox

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout RA Action Repo
        uses: actions/checkout@v3
        with:
          repository: Rockwell-Automation-Inc/actions
          ref: v9.1
          token: ${{ secrets.READ_GITHUB_ACTIONS_PAT }}
          path: .github/actions

      - name: Download all workflow artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.HELM_CHART_RELATIVE_LOCATION }}

      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          kubeconfig: ${{ secrets.LEMANS_SANDBOX_KUBECONFIGS }}
          context: ${{ matrix.cluster_name }}-admin
      # ... Actual deployment ...

      - name: Deployment
        run: |
          mkdir -p ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests
          helm template --values ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/${{ env.DEPLOYMENT_ENVIRONMENT }}-values.yaml \
          --output-dir ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests ${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts \
          --namespace ${{ env.KUBERNETES_NAMESPACE }} \
          --name-template ${{ env.HELM_CHART_NAME }} \
          --set jobperfTest="True",stressTestID=${{ secrets.FRONTDOOR_STRESS_TEST_HEADER_VALUE }} \
          --set armAuth.identityResourceID="${{ matrix.identity_resource_id }}" \
          --set armAuth.identityClientID="${{ matrix.identity_client_id }}"
          cat ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests/${{ env.HELM_CHART_NAME }}/templates/job-perftest.yaml
          kubectl apply -f ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests/${{ env.HELM_CHART_NAME }}/templates/job-perftest.yaml --namespace ${{ env.KUBERNETES_NAMESPACE }}
  nonprod-performance-test:
    if: github.ref == 'refs/heads/release' || github.ref == 'refs/heads/feature/performance-test'
    needs: build
    timeout-minutes: 20
    runs-on:
      - self-hosted
      - ${{ matrix.location }}
      - ${{ matrix.environment }}
      - deployment    # Define some nonprod specific environment variables.
    strategy:
      fail-fast: false  # Don't fail all if one fails.
      matrix:
        location: [eastus2]
        include:
          - location: eastus2
            environment: nonprod
            cluster_name: aks-eastus2-dev0
            identity_resource_id: /subscriptions/13960a1d-f5d0-4cc1-b82e-8bb9c42aa6fa/resourceGroups/rg-dev-usermanaged-aks-eastus2/providers/Microsoft.ManagedIdentity/userAssignedIdentities/aks-keyvault-managed-identity
            identity_client_id: 8520892a-aa21-40a5-9941-4ee093966d55
    env:
      DEPLOYMENT_ENVIRONMENT: nonprod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout RA Action Repo
        uses: actions/checkout@v3
        with:
          repository: Rockwell-Automation-Inc/actions
          ref: v9.1
          token: ${{ secrets.READ_GITHUB_ACTIONS_PAT }}
          path: .github/actions

      - name: Download all workflow artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{ env.HELM_CHART_RELATIVE_LOCATION }}

      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          kubeconfig: ${{ secrets.LEMANS_NONPROD_KUBECONFIGS }}
          context: ${{ matrix.cluster_name }}-admin
      # ... Actual deployment ...

      - name: Deployment
        run: |
          mkdir -p ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests
          helm template --values ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/${{ env.DEPLOYMENT_ENVIRONMENT }}-values.yaml \
          --output-dir ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests ${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts \
          --namespace ${{ env.KUBERNETES_NAMESPACE }} \
          --name-template ${{ env.HELM_CHART_NAME }} \
          --set jobperfTest="True",stressTestID=${{ secrets.FRONTDOOR_STRESS_TEST_HEADER_VALUE }} \
          --set armAuth.identityResourceID="${{ matrix.identity_resource_id }}" \
          --set armAuth.identityClientID="${{ matrix.identity_client_id }}"
          cat ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests/${{ env.HELM_CHART_NAME }}/templates/job-perftest.yaml
          kubectl apply -f ./${{ env.HELM_CHART_RELATIVE_LOCATION }}/helm-charts/manifests/${{ env.HELM_CHART_NAME }}/templates/job-perftest.yaml --namespace ${{ env.KUBERNETES_NAMESPACE }}
